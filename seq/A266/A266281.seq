%I A266281 #28 Feb 19 2016 05:53:50
%S A266281 1,4,11,13,14,17,19,22,23,29,34,47,58,61,65,87,89,93,94,97,102,103,
%T A266281 105,109,113,115,116,118,121,130,131,136,139,141,149,152,157,159,161,
%U A266281 166,167,169,174,177,179,181,184,188,191,193,194,197,199,203,218,223,224
%N A266281 a(1)=1; a(n) is the first integer > a(n-1) with which, in the a(n-1)/a(n) decimal expansion, n is present.
%C A266281 Two other sequences are possible without the a(n)>a(n-1) limitation, one with a(n) terms already used in the sequences (where the n growth does not allow data looping), another only with a(n) terms not yet used.
%H A266281 Francesco Di Matteo, <a href="/A266281/b266281.txt">Table of n, a(n) for n = 1..1000</a>
%e A266281 a(8) = 22 because a(7) = 19 and "8" does not appear in the digital expansion of 19/20 = 0.95 nor of 19/21 = 0.904761904761..., but it does appear in 19/22 = 0.86363...;
%e A266281 a(9) = 23 because 22/23 = 0.9565217391304..., where "9" does appear;
%e A266281 a(10) = 29 because "10" does not appear in the digital expansion of 23/k for k=24..28, but it does appear in 23/29 = 0.7931034...
%t A266281 f[n_] := Block[{a = {1}, k}, Do[k = a[[m - 1]] + 1; While[SequenceCount[Flatten@ First@ RealDigits[a[[m - 1]]/k], IntegerDigits@ m] < 1, k++]; AppendTo[a, k], {m, 2, n}]; a]; f@ 57 (* Version 10.1, or *)
%t A266281 f[n_] := Block[{a = {1}, k}, Do[k = a[[m - 1]] + 1; While[StringCount[
%t A266281 ToString[FromDigits@ Flatten@ First@ RealDigits[a[[m - 1]]/k]], ToString@ m] < 1, k++]; AppendTo[a, k], {m, 2, n}]; a]; f@ 57 (* _Michael De Vlieger_, Dec 30 2015, Version 5.1 *)
%o A266281 (Python)
%o A266281 alfa = 1
%o A266281 for n in range(2,101):
%o A266281     beta = alfa
%o A266281     aflag = 0
%o A266281     while aflag == 0:
%o A266281         beta = beta + 1
%o A266281         restlist = []
%o A266281         result = ""
%o A266281         dividend = alfa
%o A266281         lenn = len(str(n))
%o A266281         bflag = 0
%o A266281         while bflag < lenn:
%o A266281             dividend = dividend * 10
%o A266281             q = dividend/beta
%o A266281             resto = dividend - (q * beta)
%o A266281             if resto == 0:
%o A266281                 bflag = lenn
%o A266281             if resto in restlist:
%o A266281                 bflag = bflag + 1
%o A266281             restlist.append(resto)
%o A266281             dividend = resto
%o A266281             result = result + str(q)
%o A266281             if str(n) in result:
%o A266281                 bflag = lenn
%o A266281                 aflag = 1
%o A266281     print alfa
%o A266281     alfa = beta
%Y A266281 Cf. A257664, A265740, A265756.
%K A266281 nonn,base
%O A266281 1,2
%A A266281 _Francesco Di Matteo_, Dec 26 2015
