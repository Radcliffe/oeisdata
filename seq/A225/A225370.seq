%I A225370 #12 Aug 30 2025 02:58:46
%S A225370 0,0,1,1,1,2,2,2,3,3,4,4,5,5,5,6,6,7,7,8
%N A225370 Let f(S) = maximal m such that the string S contains two disjoint identical (scattered) substrings of length m ("twins"); a(n) = min f(S) over all binary strings of length n.
%H A225370 Maria Axenovich, Yury Person, and Svetlana Puzynina, <a href="http://arxiv.org/abs/1204.2180">A regularity lemma and twins in words</a>, arXiv:1204.2180 [math.CO], 2012; Journal of Combinatorial Theory, Series A, V. 120, Issue 4, 2013, p. 733-743.
%F A225370 From _Michael S. Branicky_, Aug 29 2025: (Start)
%F A225370 a(n) = f(n, {0,1}) = f(n, 2, 2) as defined in Axenovich et al. and a(6)..a(20) appear in Table 1, p. 8.
%F A225370 floor(n/2) >= a(n) >= floor(n/3). (End)
%o A225370 (Python)
%o A225370 from itertools import combinations, product
%o A225370 def ok(u, v):
%o A225370     i = j = 0
%o A225370     while i < len(u) and j < len(v):
%o A225370         if u[i] == v[j]:
%o A225370             i += 1
%o A225370         j += 1
%o A225370     return i == len(u)
%o A225370 def f(s):
%o A225370     n = len(s)
%o A225370     for l in range(n//2, n//3, -1):
%o A225370         for I in combinations(range(n), l):
%o A225370             u = "".join(s[i] for i in I)
%o A225370             r = "".join(s[_] for _ in range(n) if _ not in I)
%o A225370             if ok(u, r): return l
%o A225370     return n//3
%o A225370 def a(n): return min(f("1"+"".join(s)) for s in product("01", repeat=n-1))
%o A225370 print([a(n) for n in range(1, 14)]) # _Michael S. Branicky_, Aug 29 2025
%K A225370 nonn,more
%O A225370 1,6
%A A225370 _N. J. A. Sloane_, May 07 2013
