%I A010569 #18 Jun 19 2025 00:16:54
%S A010569 10,80,2160,82720,3737120,186303840,9945915840,558476528000,
%T A010569 32597366872320
%N A010569 Number of 2n-step self-avoiding closed paths on the 5-dimensional cubic lattice.
%H A010569 M. E. Fisher and D. S. Gaunt, <a href="https://doi.org/10.1103/PhysRev.133.A224">Ising model and self-avoiding walks on hypercubical lattices and high density expansions</a>, Phys. Rev. 133 (1964) A224-A239.
%o A010569 (Python)
%o A010569 def A010569(n): # For illustration - becomes slow for n >= 5
%o A010569     if not hasattr(A:=A010569, 'r'):
%o A010569        A.terms = [10]; A.r = 0,1,2,3,4; z = 0,0,0,0; I = (0,*z), (1,*z)
%o A010569        A.paths = (*I,(2,*z)), (*I,(1,1,*z[1:])); A.weights = 10, 80
%o A010569     while n > len(A.terms):
%o A010569         for L in (0, 1):
%o A010569             np = []; nw=[];cycles = 0
%o A010569             for path,weight in zip(A.paths,A.weights):
%o A010569                 end = path[-1]
%o A010569                 for i in A.r:
%o A010569                    for s in (1, -1):
%o A010569                       t = tuple(end[j]if j!=i else end[j]+s for j in A.r)
%o A010569                       if t not in path: np+=[path+(t,)]; nw+=[weight]
%o A010569                       elif L and t==path[0]: cycles += weight
%o A010569             A.paths, A.weights = np, nw
%o A010569         A.terms.append(cycles)
%o A010569     return A.terms[n-1] # _M. F. Hasler_, Jun 17 2025
%Y A010569 Cf. A010568, A010570.
%K A010569 nonn,more,changed
%O A010569 1,1
%A A010569 _N. J. A. Sloane_.
%E A010569 a(6)-a(8) from _Sean A. Irvine_, Jun 04 2018
%E A010569 a(9) from _Sean A. Irvine_, Aug 10 2020
%E A010569 "Self-avoiding" inserted in definition by _M. F. Hasler_, Jun 18 2025
