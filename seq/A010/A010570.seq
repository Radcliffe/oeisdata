%I A010570 #20 Jun 24 2025 00:11:44
%S A010570 12,120,4200,216720,13594320,959431200,73286046960,5928739001280
%N A010570 Number of 2n-step self-avoiding closed paths on the 6-dimensional cubic lattice.
%C A010570 The initial term a(1) = 12 corresponds to a cycle which is one step in some direction and one step back. Sometimes such paths in which an edge is used twice, are not counted as self-avoiding path. - _M. F. Hasler_, Jun 18 2025
%H A010570 M. E. Fisher and D. S. Gaunt, <a href="https://doi.org/10.1103/PhysRev.133.A224">Ising model and self-avoiding walks on hypercubical lattices and high density expansions</a>, Phys. Rev. 133 (1964) A224-A239.
%o A010570 (Python)
%o A010570 def A010570(n): # For illustration - becomes slow for n > 4
%o A010570     if not hasattr(A:=A010570, 'r'):
%o A010570        A.terms = [12]; A.weights = 12, 120; I = (0,)*6, (1,)+(0,)*5
%o A010570        A.paths = (*I,(2,)+(0,)*5), (*I,(1,1)+(0,)*4); A.r = tuple(range(6))
%o A010570     while n > len(A.terms):
%o A010570         for L in (0, 1):
%o A010570             np = []; nw=[]; cycles = 0
%o A010570             for path,weight in zip(A.paths,A.weights):
%o A010570                 end = path[-1]
%o A010570                 for i in A.r:
%o A010570                    for s in (1, -1):
%o A010570                       t = tuple(end[j]if j!=i else end[j]+s for j in A.r)
%o A010570                       if t not in path: np+=[path+(t,)]; nw+=[weight]
%o A010570                       elif L and t==path[0]: cycles += weight
%o A010570             A.paths, A.weights = np, nw
%o A010570         A.terms.append(cycles)
%o A010570     return A.terms[n-1] # _M. F. Hasler_, Jun 17 2025
%Y A010570 Cf. A010567 (d=3) - A010569 (d=5).
%K A010570 nonn,more,changed
%O A010570 1,1
%A A010570 _N. J. A. Sloane_.
%E A010570 a(6)-a(7) from _Sean A. Irvine_, Jun 01 2018
%E A010570 a(8) from _Sean A. Irvine_, Aug 17 2020
%E A010570 "Self-avoiding" added in definition by _M. F. Hasler_, Jun 18 2025
