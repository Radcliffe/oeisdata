%I A002188 M0044 N0014 #79 Mar 23 2025 01:12:37
%S A002188 0,0,0,1,0,2,1,0,2,1,0,2,1,3,2,1,3,2,4,3,0,4,3,0,4,3,0,4,1,2,3,1,2,4,
%T A002188 1,2,4,1,2,4,1,5,4,1,5,4,1,5,4,1,0,2,1,0,2,1,5,2,1,3,2,1,3,2,4,3,2,4,
%U A002188 3,2,4,3,2,4,3,2,4,3,2,4,5,2,4,5,2,4,3,7,4,3,7,4,3,7,4,3,5,2,3,5,2,3,5,2,3
%N A002188 Sprague-Grundy value for Grundy's game when starting with n tokens.
%C A002188 Comments from _Allan C. Wechsler_, Mar 22 2025 (Start)
%C A002188 Grundy's game starts with a single heap of n tokens. A legal move consists of dividing a heap into two unequal parts. Since heaps of size 1 or 2 cannot be so divided, once the position has no heaps larger than 2, there are no legal moves, and according to the usual convention in such games, the first player who cannot move loses.
%C A002188 Note that Grundy's game is not an "octal game", because that formalism is not rich enough to capture the "unequal" splitting rule. (End)
%D A002188 C. Berge, Graphs and Hypergraphs, North-Holland, 1973; p. 324.
%D A002188 R. K. Guy, Fair Game: How to play impartial combinatorial games, COMAP's Mathematical Exploration Series, 1989; see p. 96.
%D A002188 N. J. A. Sloane, A Handbook of Integer Sequences, Academic Press, 1973 (includes this sequence).
%D A002188 N. J. A. Sloane and Simon Plouffe, The Encyclopedia of Integer Sequences, Academic Press, 1995 (includes this sequence).
%H A002188 David Cleaver, <a href="/A002188/b002188.txt">Table of n, a(n) for n = 0..20000</a> (first 10000 terms from Eric M. Schmidt)
%H A002188 Achim Flammenkamp, <a href="http://wwwhomes.uni-bielefeld.de/achim/grundy.html">Sprague-Grundy Values of Grundy's Game</a>
%H A002188 Achim Flammenkamp, <a href="/A002188/a002188_1.pdf">Sprague-Grundy Values of Grundy's Game</a> [local cached copy, pdf only, with permission]
%H A002188 P. M. Grundy, <a href="/A002188/a002188.pdf">Mathematics and games</a>, Eureka (The Archimedeans' Journal), No. 2, 1939, pp. 6-8. [Annotated scanned copy. My former colleague and coauthor Florence Jessie MacWilliams (nee Collinson), who was a student at Cambridge University in 1939, gave me this journal. - _N. J. A. Sloane_, Nov 17 2018]
%H A002188 Richard K. Guy and Cedric A. B. Smith, <a href="https://doi.org/10.1017/S0305004100031509">The G-values of various games</a>, Proc. Cambridge Philos. Soc. 52 (1956), 514-526. See Table 4.
%H A002188 Gabriel Nivasch, <a href="http://www.gabrielnivasch.org/fun/combinatorial-games/sprague-grundy"> The Sprague-Grundy theory of impartial games</a>
%H A002188 Gabriel Nivasch, <a href="http://web.archive.org/web/20070504194337/yucs.org/~gnivasch/cgames/spraguegrundy/index.html">The Sprague-Grundy theory of impartial games</a> [archived version]
%H A002188 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/GrundysGame.html">Grundy's Game</a>
%H A002188 David Cleaver, <a href="/A002188/a002188.txt">Table of n, a(n) for n = 0..200000</a>
%F A002188 "Mike Guy has computed ten million values, but a discernible pattern remains elusive" [Guy, 1989]. - _N. J. A. Sloane_, Jan 03 2016
%t A002188 mex[list_] :=  mex[list] = Min[Complement[Range[0, Length[list]], list]];
%t A002188 move[grundygame, list_] := move[grundygame, list] = Union@Flatten[Union[Table[ Sort@Join[Drop[list, {i}], {list[[i]] - j, j}], {i, Length[list]}, {j, Floor[(list[[i]] - 1)/2]}], Table[Sort@Join[Drop[list, {i}], {list[[i]] - j, j}], {i, Length[list]}, {j, Ceiling[(list[[i]] + 1)/2], list[[i]] - 1}]], 1];
%t A002188 SpragueGrundy[game_, list_] :=  SpragueGrundy[game, list] =
%t A002188    mex[SpragueGrundy[game, #] & /@ move[game, list]];
%t A002188 Table[SpragueGrundy[grundygame, {i}], {i, 0, 42}] (* _Birkas Gyorgy_, Apr 19 2011 *)
%o A002188 (C++)
%o A002188 #include <algorithm>
%o A002188 #include <array>
%o A002188 #include <iostream>
%o A002188 int main() {
%o A002188     constexpr int bound = 10000;
%o A002188     std::array<int, bound+1> gnumbers;
%o A002188     std::array<bool, bound/2+1> excluded;
%o A002188     for (int i = 0; i <= bound; ++i) {
%o A002188         auto e_begin = excluded.begin();
%o A002188         auto e_end = e_begin + i/2;
%o A002188         std::fill(e_begin, e_end, false);
%o A002188         for (int j = 1; j < (i+1)/2; ++j) {
%o A002188             int const k = i - j;
%o A002188             excluded[gnumbers[j] ^ gnumbers[k]] = true;
%o A002188         }
%o A002188         gnumbers[i] = std::find(e_begin, e_end, false) - e_begin;
%o A002188     }
%o A002188     for (int i = 0; i <= bound; ++i)
%o A002188         std::cout << i << ' ' << gnumbers[i] << '\n';
%o A002188 } // _Eric M. Schmidt_, Jan 04 2017
%o A002188 (Python)
%o A002188 def SpragueGrundy(bound):
%o A002188   gnumbers = [0 for i in range(bound+2)]
%o A002188   for i in range(bound+1):
%o A002188     excluded = [0 for z in range(i/2+1)]
%o A002188     for j in range(1, (i+1)/2):
%o A002188       k = i - j
%o A002188       excluded[gnumbers[j] ^ gnumbers[k]] = 1
%o A002188     gnumbers[i] = excluded.index(0)
%o A002188   return gnumbers[:-1]
%o A002188 print('{}'.format(SpragueGrundy(100))) # _David Cleaver_, Mar 22 2025
%Y A002188 See A036685 for indices of zero terms.
%Y A002188 For RECORDS, see A180120, A180121.
%K A002188 nonn,easy,look,nice
%O A002188 0,6
%A A002188 _N. J. A. Sloane_
%E A002188 More terms from Pab Ter (pabrlos(AT)yahoo.com), May 11 2004
