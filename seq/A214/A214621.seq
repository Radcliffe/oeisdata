%I A214621 #15 Sep 28 2018 15:20:07
%S A214621 1080,1260,1800,2016,2673,3024,3267,3402,4032,4500,4653,4950,5346,
%T A214621 5400,5670,5757,5940,6048,6345,6534,6804,7056,7560,7575,8064,11084,
%U A214621 11542,12654,12915,13026,13068,13260,13860,14018,14490,14652,14904,15124,15129,16032,16320
%N A214621 Numbers n such that at least one other integer m exists with the same smallest and same largest prime factors, and same multisets of decimal and binary digits as n.
%C A214621 Decimal digits of m are a permutation of decimal digits of n,
%C A214621 binary digits of m are a permutation of binary digits of a.
%C A214621 Conjecture: there is X such that among integers bigger than X more than 50% are in the sequence.
%H A214621 Robert Israel, <a href="/A214621/b214621.txt">Table of n, a(n) for n = 1..10000</a>
%e A214621 1080 and 1800 have the same set of decimal digits, same set of binary digits (10000111000 versus 11100001000), same smallest prime factor 2, and same largest prime factor 5.
%p A214621 Res:= {}:
%p A214621 for n from 1 to 2^16-1 do
%p A214621   f:= numtheory:-factorset(n);
%p A214621   v:= [min(f),max(f),ilog2(n), convert(convert(n,base,2),`+`),sort(convert(n,base,10))];
%p A214621   if assigned(R[v]) then
%p A214621      Res:= Res union {n, R[v]}
%p A214621   else
%p A214621      R[v]:= n
%p A214621   fi
%p A214621 od:
%p A214621 sort(convert(Res,list)); # _Robert Israel_, Sep 28 2018
%o A214621 (Python)
%o A214621 # primes = [2...99991]
%o A214621 # ~15 minutes
%o A214621 TOP = 100000
%o A214621 smallest = [0]*TOP
%o A214621 largest  = [0]*TOP
%o A214621 decimal = [0]*TOP
%o A214621 binary  = [0]*TOP
%o A214621 flags = [0]*TOP
%o A214621 for n in range(1,TOP):
%o A214621     curSm = curLa = curDec = curBin = 0
%o A214621     t = b = d = n
%o A214621     while b:
%o A214621         curBin += 1000**( b&1 )
%o A214621         b /= 2
%o A214621     while d:
%o A214621         curDec += 10**( d%10 )
%o A214621         d /= 10
%o A214621     for p in primes:
%o A214621         if t%p==0:
%o A214621             if curSm==0:
%o A214621                 curSm = p
%o A214621             curLa = p
%o A214621             t/=p
%o A214621             while t%p==0:
%o A214621                 t/=p
%o A214621             if t==1:
%o A214621                 break
%o A214621     binary[n] = curBin
%o A214621     decimal[n] = curDec
%o A214621     smallest[n] = curSm
%o A214621     largest[n]  = curLa
%o A214621     for k in range(1,n):
%o A214621         if smallest[k]==curSm and largest[k]==curLa:
%o A214621             if decimal[k]==curDec and binary[k]==curBin:
%o A214621                 flags[k]+=1
%o A214621                 flags[n]+=1
%o A214621 for n in range(1,TOP):
%o A214621     if flags[n]>0:
%o A214621         print n,
%Y A214621 Cf. A214619, A214620.
%K A214621 nonn,base
%O A214621 1,1
%A A214621 _Alex Ratushnyak_, Jul 23 2012
