%I A065207 #31 May 10 2025 21:57:47
%S A065207 19,28,37,39,46,48,49,57,58,64,67,73,75,76,82,84,85,91,93,94,109,119,
%T A065207 129,139,149,150,152,153,154,159,160,162,163,169,170,172,173,179,189,
%U A065207 208,218,219,228,229,238,239,248,250,251,253,258,259,260,261,268,269
%N A065207 Numbers which need two 'Reverse and Add' steps to reach a palindrome.
%C A065207 The number of steps starts at 0, so palindromes (cf. A002113) are excluded.
%C A065207 Numbers k such that A033665(k) = 2. - _Andrew Howroyd_, Dec 06 2024
%H A065207 Michael S. Branicky, <a href="/A065207/b065207.txt">Table of n, a(n) for n = 1..10000</a> (terms 1..1000 from Harry J. Smith)
%H A065207 <a href="/index/Res#RAA">Index entries for sequences related to Reverse and Add!</a>
%t A065207 trasQ[n_]:=Length[NestWhileList[IntegerReverse[#]+#&,n,!PalindromeQ[ #]&,1,5]] ==3; Select[Range[300],trasQ] (* _Harvey P. Dale_, Apr 13 2022 *)
%o A065207 (ARIBAS) revadd_steps(2,58); (* For the definition of function revadd_steps see A065206. *)
%o A065207 (Python)
%o A065207 def ra(n): s = str(n); return int(s) + int(s[::-1])
%o A065207 def ispal(n): s = str(n); return s == s[::-1]
%o A065207 def aupto(limit):
%o A065207   alst = []
%o A065207   for k in range(limit+1):
%o A065207     if ispal(k): continue
%o A065207     k2 = ra(k)
%o A065207     if ispal(k2): continue
%o A065207     if ispal(ra(k2)): alst.append(k)
%o A065207   return alst
%o A065207 print(aupto(269)) # _Michael S. Branicky_, May 06 2021
%o A065207 (PARI) isok(n,s=2)={for(k=0, s, my(r=fromdigits(Vecrev(digits(n)))); if(r==n, return(k==s)); n += r); 0} \\ _Andrew Howroyd_, Dec 06 2024
%Y A065207 Cf. A002113, A015977, A033665, A065206.
%K A065207 nonn,base,changed
%O A065207 1,1
%A A065207 _Klaus Brockhaus_, Oct 21 2001
%E A065207 Offset changed from 0 to 1 by _Harry J. Smith_, Oct 14 2009
