%I A214250 #15 Jul 11 2013 02:34:12
%S A214250 56,80,108,84,132,92,84,96,128,200,152,144,236,160,172,204,284,212,
%T A214250 188,184,192,200,208,232,280,384,304,280,280,288,428,304,312,320,340,
%U A214250 388,500,396,356,344,352,360,368,376,384,392,400,432,496,632,520,480,472,480
%N A214250 Sum of the eight nearest neighbors of n in a triangular "horizontal-first" spiral with positive integers.
%e A214250 Spiral begins:
%e A214250 __ __ __ __ __ __ __ 57
%e A214250 __ __ __ __ __ __ 56 31 58
%e A214250 __ __ __ __ __ 55 30 13 32 59
%e A214250 __ __ __ __ 54 29 12  3 14 33 60
%e A214250 __ __ __ 53 28 11  2  1  4 15 34 61
%e A214250 __ __ 52 27 10  9  8  7  6  5 16 35 62
%e A214250 __ 51 26 25 24 23 22 21 20 19 18 17 36 63
%e A214250 50 49 48 47 46 45 44 43 42 41 40 39 38 37 64
%e A214250 The eight nearest neighbors of 4 are: 1, 3, 14, 33, 15, 5, 6, 7. Their sum is a(4)=84.
%o A214250 (Python)
%o A214250 SIZE=29  # must be odd
%o A214250 grid = [0] * (SIZE*SIZE)
%o A214250 saveX = [0]* (SIZE*SIZE)
%o A214250 saveY = [0]* (SIZE*SIZE)
%o A214250 saveX[1] = saveY[1] = posX = posY = SIZE//2
%o A214250 grid[posY*SIZE+posX]=1
%o A214250 n = 2
%o A214250 def walk(stepX,stepY,chkX,chkY,chkX2,chkY2):
%o A214250   global posX, posY, n
%o A214250   while 1:
%o A214250     posX+=stepX
%o A214250     posY+=stepY
%o A214250     grid[posY*SIZE+posX]=n
%o A214250     saveX[n]=posX
%o A214250     saveY[n]=posY
%o A214250     n+=1
%o A214250     if posX==0 or grid[(posY+chkY)*SIZE+posX+chkX]+grid[(posY+chkY2)*SIZE+posX+chkX2]==0:
%o A214250         return
%o A214250 while 1:
%o A214250     walk(-1, 0,  1, -1, 0, -1)   # left
%o A214250     if posX==0:
%o A214250         break
%o A214250     walk( 1,-1,  1, 1,  1, 1)    # right+up
%o A214250     walk( 1, 1, -1,  0, -1, 0)   # right+down
%o A214250 for n in range(1,122):
%o A214250     posX = saveX[n]
%o A214250     posY = saveY[n]
%o A214250     k = grid[(posY-1)*SIZE+posX] + grid[(posY+1)*SIZE+posX]
%o A214250     k+= grid[(posY-1)*SIZE+posX-1] + grid[(posY-1)*SIZE+posX+1]
%o A214250     k+= grid[(posY+1)*SIZE+posX-1] + grid[(posY+1)*SIZE+posX+1]
%o A214250     k+= grid[posY*SIZE+posX-1] + grid[posY*SIZE+posX+1]
%o A214250     print k,
%Y A214250 Cf. A214226 - same sum in a triangular "horizontal-last" spiral.
%K A214250 nonn,easy
%O A214250 1,1
%A A214250 _Alex Ratushnyak_, Jul 08 2012
