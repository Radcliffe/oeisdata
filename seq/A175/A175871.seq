%I A175871 #11 Sep 13 2025 13:32:20
%S A175871 2,7,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,7,22,11,34,17,52,26,13,
%T A175871 40,20,10,5,16,8,4,2,7,22,11,34,17,52,26,13,40,20,10,5,16,8,4,2,7,22,
%U A175871 11,34,17,52,26,13,40,20,10,5,16,8,4,2,7,22,11,34,17,52,26,13,40,20,10,5,16,8
%N A175871 a(0) = 2; a(n) = a(n - 1) * 3 + 1 if a(n - 1) is prime, or a(n - 1) / (smallest prime factor) if it is composite.
%C A175871 a(n) repeats itself after 16 iterations. Peak is a(6) = 52.
%C A175871 The function is similar in nature to Collatz's 3x+1 problem, except that it deals with primality instead of parity.
%e A175871 a(0) = 2
%e A175871 a(1) = 2 * 3 + 1 = 7, because a(0) was prime.
%e A175871 a(2) = 7 * 3 + 1 = 22, because a(1) was prime.
%e A175871 a(3) = 22 / 2 = 11, because the smallest prime factor of a(2) was 2.
%t A175871 NestList[If[PrimeQ[#],3#+1,#/FactorInteger[#][[1,1]]]&,2,80] (* or  *) PadRight[{},80,{2,7,22,11,34,17,52,26,13,40,20,10,5,16,8,4}] (* _Harvey P. Dale_, Aug 05 2023 *)
%o A175871 (Python)
%o A175871 import math
%o A175871 from sympy import isprime
%o A175871 a = [2]
%o A175871 while not a[ -1] in a[:-1]:
%o A175871     if isprime(a[ -1]):
%o A175871         a.append(a[ -1] * 3 + 1)
%o A175871     else:
%o A175871         for div in range(2, int(math.sqrt(a[ -1])) + 1):
%o A175871             if not a[ -1] % div:
%o A175871                 a.append(a[ -1] // div)
%o A175871                 break
%o A175871 print(a)
%Y A175871 Cf. A000040, A175867.
%K A175871 easy,nonn,changed
%O A175871 0,1
%A A175871 _Grant Garcia_, Oct 02 2010
