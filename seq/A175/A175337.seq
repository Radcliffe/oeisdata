%I A175337 #20 Jun 02 2025 02:47:41
%S A175337 0,0,1,1,0,0,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,1,1,
%T A175337 0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,1,0,0,1,
%U A175337 1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,1,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,0
%N A175337 Fixed point of morphism 0 -> 00110, 1 -> 00111.
%C A175337 Turns (by 90 degrees) of a dragon curve (called R5-dragon in the fxtbook, see link below) which can be rendered as follows:
%C A175337   [Init] Set n=0 and direction=0.
%C A175337   [Draw] Draw a unit line (in the current direction). Turn left/right if a(n) is zero/nonzero respectively.
%C A175337   [Next] Set n=n+1 and goto (draw).
%C A175337 With counting in radix 5: whether the lowest nonzero digit is >2 (see C++ code).
%C A175337 With morphism F -> F0F0F1F1F, 0 -> 0, 1 -> 1: fixed point with all 'F' omitted.
%H A175337 Paolo Xausa, <a href="/A175337/b175337.txt">Table of n, a(n) for n = 0..10000</a>
%H A175337 Joerg Arndt, <a href="http://www.jjj.de/fxt/#fxtbook">Matters Computational (The Fxtbook)</a>, section 1.31.5 "Dragon curves based on radix-R counting", pp.95-101; image on p.96
%t A175337 Nest[Flatten[ReplaceAll[#,{0->{0,0,1,1,0},1->{0,0,1,1,1}}]]&,{0},3] (* _Paolo Xausa_, Nov 09 2023 *)
%o A175337 (C++) /* CAT algorithm */
%o A175337 bool bit_dragon_r5_turn(ulong &x)
%o A175337 /* Increment the radix-5 word x and return (tr) whether
%o A175337    the lowest nonzero digit of the incremented word is > 2. */
%o A175337 {
%o A175337   ulong s = 0;
%o A175337   while ( (x & 7) == 4 ) { x >>= 3; ++s; } /* scan over nines */
%o A175337   bool tr = ( (x & 7) >= 2 ); /* whether digit will be > 2 */
%o A175337   ++x; /* increment next digit */
%o A175337   x <<= (3*s); /* shift back */
%o A175337   return tr;
%o A175337 }
%Y A175337 Cf. A080846 (with terdragon curve) and A014577 (with Heighway dragon).
%K A175337 nonn,changed
%O A175337 0,1
%A A175337 _Joerg Arndt_, Apr 15 2010
