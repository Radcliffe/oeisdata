%I A166082 #11 May 10 2025 03:18:52
%S A166082 8,8,8,8,12,12,12,12,16,16,18,18,20,20,20,20,24,24,27,27,28,28,30,30,
%T A166082 32,32,36,36,36,36,36,36,40,40,45,45,48,48,48,48,48,48,54,54,54,54,60,
%U A166082 60,64,64,64,64,64,64,64,64,72,72,75,75,80,80,80,80,80,80,84,84,84,84,90
%N A166082 Maximal volume of a closed box created by using at most n voxels as the boundary.
%C A166082 For example, a 3x3x3 box can be created by using top and bottom plates of 3x3x1 voxels, and using 8 voxels to connect them, totaling 26 voxels.
%F A166082 For a given value of N (at least 8), calculate the max Volume(N)=w*h*d such that N <= (w*h*d - (w-2)*(h-2)*(d-2)). The minimum box is 2x2x2 voxels to prevent overlapping voxels (multiple voxels occupying the same location in space) or degenerate cases.
%o A166082 (Java) // input: int voxels int max = 0;
%o A166082 for (int depth = voxels / 4; depth >= 2; depth--)
%o A166082 {
%o A166082     for (int width = voxels / (2 * depth); width >= 2; width--)
%o A166082     {
%o A166082         int remaining = voxels - 2 * width * depth;
%o A166082         int height = 2 + remaining / (2 * ((width - 1) + (depth - 1)));
%o A166082         int volume = width * depth * height;
%o A166082         if (max < volume)
%o A166082         {
%o A166082             max = volume;
%o A166082         }
%o A166082     }
%o A166082 }
%Y A166082 Cf. A166083 (Sequence with only the Volume(N)>Volume(N-1) condition), A166084 (Sequence where the enclosed empty space must increase).
%K A166082 base,nonn
%O A166082 8,1
%A A166082 _Mark Jeronimus_, Oct 06 2009, Dec 01 2009
%E A166082 Minor edits by _N. J. A. Sloane_, Dec 05 2009
