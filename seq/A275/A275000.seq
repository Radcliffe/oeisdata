%I A275000 #30 May 20 2025 21:07:12
%S A275000 2,4,18,590295810358705651712
%N A275000 a(n) = F[n]_n(2), main diagonal of fast-iteration function applied to 2.
%C A275000 The next term is too large to include.
%C A275000 The fast-iteration (or extended Grzegorczyk hierarchy) function F[k]_n(x) is defined as follows:
%C A275000 F[k]_{n+1}(x) = (F[k]_n)^x(x) = F[k]_n(F[k]_n(...F[k]_n(x)...)) (with x iterations);
%C A275000 F[k]_0(x) = x+k.
%C A275000 The base case could be rewritten using n=1 rather than n=0. If so the definition would be:
%C A275000 F'[k]_n+1(x) = (F'[k]_n)^x(x);
%C A275000 F'[k]_1(x) = x+k.
%C A275000 Because of its clear definition, this function is a popular benchmark for large number functions.
%H A275000 Googology Wiki, <a href="http://googology.wikia.com/wiki/Fast-growing_hierarchy">Fast Growing Hierarchy</a>
%H A275000 Wikipedia, <a href="https://en.wikipedia.org/wiki/Fast-growing_hierarchy">Fast-growing hierarchy</a>.
%F A275000 For small values of n we have:
%F A275000 F[k]_0(x) = x+k;
%F A275000 F[k]_1(x) = x+k*x = (k+1)*x;
%F A275000 F[k]_2(x) = x*(k+1)^x.
%e A275000 F[0]_0(2) = 2+0 = 2;
%e A275000 F[1]_1(2) = (1+1)*2 = 4;
%e A275000 F[2]_2(2) = 2*(2+1)^2 = 18;
%e A275000 F[3]_3(2) = F[3]_2(F[3]_2(2)) = F[3]_2(2*(3+1)^2) = F[3]_2(32) = 32*(3+1)^32 = 590295810358705651712.
%t A275000 f[k_,0, x_] := x + k; f[k_, n_, x_] := Nest[f[k,n - 1, # ]&, x, x]; Table[f[n, n, 2], {n, 0, 3}]
%Y A275000 A154714 gives w_n(2) = F[1]_n(2).
%K A275000 nonn,changed
%O A275000 0,1
%A A275000 _Natan Arie Consigli_, Oct 08 2016
