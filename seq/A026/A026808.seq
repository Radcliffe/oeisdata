%I A026808 #18 Jun 17 2025 03:12:20
%S A026808 0,1,2,3,4,7,8,11,12,15,16,21,22,25,28,31,32,37,38,43,46,49,50,59,60,
%T A026808 63,66,71,72,81,82,87,90,93,96,105,106,109,112,121,122,131,132,137,
%U A026808 142,145,146,159,160,165,168,173,174,183,186,195
%N A026808 a(n) is the number of products P of distinct positive integers satisfying P <= n.
%C A026808 The products must contain at least two integers. - _Sean A. Irvine_, Oct 13 2019
%H A026808 Robert Israel, <a href="/A026808/b026808.txt">Table of n, a(n) for n = 1..10000</a>
%H A026808 Sean A. Irvine, <a href="https://github.com/archmageirvine/joeis/blob/master/src/irvine/oeis/a026/A026808.java">Java program</a> (github)
%e A026808 a(6) = 7 because the possible products are 1*2, 1*3, 1*4, 1*5, 1*6, 2*3, and 1*2*3. - _Sean A. Irvine_, Oct 13 2019
%p A026808 N:= 200: # for a(1)..a(N)
%p A026808 with(queue):Q:= new():
%p A026808 V:= Vector(N):
%p A026808 for i from 1 to N/2 do
%p A026808   for j from i+1 to N while i*j <= N do
%p A026808     p:= i*j;
%p A026808     V[p]:= V[p]+1;
%p A026808     if p*(j+1) <= N then enqueue(Q,[i,j]) fi
%p A026808 od od:
%p A026808 while not empty(Q) do
%p A026808   s:= dequeue(Q);
%p A026808   p:= convert(s,`*`);
%p A026808   for k from s[-1]+1 to N while p*k <= N do
%p A026808      pp:= p*k;
%p A026808      V[pp]:= V[pp]+1;
%p A026808      if pp*(k+1) <= N then enqueue(Q,[op(s),k]) fi
%p A026808   od;
%p A026808 od:
%p A026808 ListTools:-PartialSums(convert(V,list)); # _Robert Israel_, Dec 09 2020
%K A026808 nonn,changed
%O A026808 1,3
%A A026808 _Clark Kimberling_
