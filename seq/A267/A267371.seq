%I A267371 #22 Jun 27 2025 02:24:55
%S A267371 0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1,0,1,
%T A267371 0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,
%U A267371 0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,0,1,0,1,0
%N A267371 Limiting sequence formed by starting with 01 and iteratively concatenating existing string with the shortest prefix that appears only once.
%H A267371 Michael S. Branicky, <a href="/A267371/b267371.txt">Table of n, a(n) for n = 1..10000</a>
%e A267371 Starting with 01, the shortest prefix occurring only once is 0, so the next string is (01)(0) = 010. After that it becomes (010)(01) = 01001, etc.
%t A267371 preLo[{np_, s_}] := NestWhile[#+1&, np, StringCount[s, StringTake[s, #], Overlaps->True]>1&]
%t A267371 a267371[n_] := Map[Boole[#=="1"]&, Characters[Last[Nest[{preLo[#], StringJoin[#[[2]], StringTake[#[[2]], preLo[#]]]}&, {1, "01"}, n]]]]
%t A267371 a267371[13] (* _Hartmut F. W. Hoft_, Mar 22 2024 *)
%o A267371 (Python)
%o A267371 from itertools import count, islice
%o A267371 def agen(): # generator of terms
%o A267371     astr, k, mink = "01", 2, 1
%o A267371     while True:
%o A267371         yield from map(int, astr[:k])
%o A267371         for k in range(1, len(astr)+1):
%o A267371             if astr[1:].count(astr[:k]) == 0:
%o A267371                 break
%o A267371         mink = max(mink, k)
%o A267371         astr += astr[:k]
%o A267371 print(list(islice(agen(), 133))) # _Michael S. Branicky_, Mar 23 2024
%Y A267371 Cf. A267372, A267373, A267374.
%K A267371 nonn
%O A267371 1
%A A267371 _Jeffrey Shallit_, Jan 13 2016
