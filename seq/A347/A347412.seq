%I A347412 #7 Jul 23 2025 16:03:25
%S A347412 0,0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,1,0,1,1,1,0,1,1,0,0,1,1,0,
%T A347412 0,1,0,0,0,1,1,0,0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,1,1,0,
%U A347412 1,1,0,0,1,1,1,1,1,0,0,1,0,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,1,0,1,0,1,1,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,0,0,0,0,1,1,1,0,1,1,0,1,0,1,0,1,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,1,1,1,0,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0,1,1,1,1,1,0,1,1,0,0,1,0,0,0,0
%N A347412 Sqrt(3)+1-adic expansion of 4, in binary alphabet.
%C A347412 Similarly to A347411, start with the number 4, and repeatedly "carry" into higher terms of the sequence by scaling and shifting the sequence (-2, -2, 1). For negative odd numbers, carry past 0 so that the result of the carry is 1.
%e A347412 First few iterates of carry, starting from expansion "4":
%e A347412 4
%e A347412 0, -4, 2
%e A347412 0, 0, 6, -2
%e A347412 0, 0, 0, -8, 3
%e A347412 0, 0, 0,  0, 11, 4
%e A347412 0, 0, 0,  0,  1, -14, 5
%e A347412 0, 0, 0,  0,  1,   0, 19, -7
%e A347412 0, 0, 0,  0,  1,   0,  1, -25, 9
%e A347412 0, 0, 0,  0,  1,   0,  1,   1, 35, -13
%o A347412 (Haskell)
%o A347412 a347412_iterates = iterate (doubleBorrow []) (4:repeat 0) where
%o A347412   doubleBorrow zs (x:y:z:xs)
%o A347412     | odd x && x <= -2 = let (q, r) = quotRem x 2 in foldl (flip (:)) (r + 2 : y-x+r+2 : z+q-1 : xs) zs
%o A347412     | abs x >= 2       = let (q, r) = quotRem x 2 in foldl (flip (:)) (r : y-x+r : z+q : xs) zs
%o A347412     | otherwise  = doubleBorrow (x:zs) (y:z:xs)
%o A347412 a347412 n = (a347412_iterates !! (n+1)) !! n
%Y A347412 Cf. A347411
%K A347412 nonn,base
%O A347412 0
%A A347412 _Ben Conner_, Aug 30 2021
%E A347412 Extra-long data section is OK for now. - _N. J. A. Sloane_, Oct 25 2021
