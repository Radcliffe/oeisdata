%I A376640 #25 Sep 03 2025 09:37:57
%S A376640 2,5,39,364,4284,57882,888365,15120105,281941490,5698630860,
%T A376640 123850391756,2875187314622,70909556459276,1849319825544900,
%U A376640 50801676936624147,1464954360561398340,44213852151883887000,1392971702129279452950,45705100441642892335954,1558551328538087579977710
%N A376640 Number of equational laws for magmas involving n operations, up to relabeling and symmetry, after removing nontrivial reflexive laws.
%H A376640 Chai Wah Wu, <a href="/A376640/b376640.txt">Table of n, a(n) for n = 0..444</a>
%H A376640 Matthew Bolan, Jose Brox, Mario Carneiro, Martin Dvořák, Andrés Goens, Harald Husum, Zoltan Kocsis, Alex Meiburg, Pietro Monticone, David Renshaw, Jérémy Scanvic, Shreyas Srinivas, Terence Tao, Anand Rao Tadipatri, Vlad Tsyrklevich, Daniel Weber, and Fan Zheng, <a href="https://teorth.github.io/equational_theories/paper.pdf">The equational theories project: using Lean and Github to complete an implication graph in universal algebra</a>, Equational Theories Project 2024. See p. 41. [Note a(0) + ... + a(4) = 4694, see the abstract.]
%H A376640 Equational Theories project, <a href="https://teorth.github.io/equational_theories/blueprint/sect0001.html">Basic theory of magmas</a>.
%H A376640 Equational Theories project, <a href="https://github.com/teorth/equational_theories/blob/main/scripts/generate_eqs_list.py">Generating a list of equations on magmas</a>, Python script.
%H A376640 Terence Tao, <a href="https://terrytao.wordpress.com/2024/09/25/a-pilot-project-in-universal-algebra-to-explore-new-ways-to-collaborate-and-use-machine-assistance/">A pilot project in universal algebra to explore new ways to collaborate and use machine assistance?</a>, 25 Sep 2024.
%F A376640 For odd n, a(n) = A376620(n) = A289679(n+2)/2.
%F A376640 For n=0, a(0) = 2.
%F A376640 For even n >= 2, a(n) = A376620(n) - A289679(n/2+1).
%e A376640 For n=0 the distinct laws are x=x and x=y.
%e A376640 For n=1 the distinct laws are x=x*x, x=x*y, x=y*x, x=y*y, and x=y*z.
%e A376640 For n=2 there are 39 distinct laws, including for instance x=(x*y)*x, x*y=y*z, and x*y=y*x, but not x*y=x*y because this is a nontrivial reflexive law (of the form X=X for an expression X that is not just a single indeterminate).
%t A376640 A376640[0] = 2; A376640[n_?OddQ] := Quotient[CatalanNumber[n + 1] BellB[n + 2], 2];
%t A376640 A376640[n_?EvenQ /; n > 0] := Module[{m = Quotient[n, 2], bellN2 = BellB[n + 2], h, sum},
%t A376640 h[ni_, ki_] := h[ni, ki] = If[ni < 2, Boole[ni == ki],
%t A376640   ki * h[ni - 2, ki] + h[ni - 2, ki - 1] + h[ni - 2, ki - 2]];
%t A376640 sum = Sum[Quotient[StirlingS2[n + 2, k] + h[n + 2, k], 2], {k, 0, n + 2}];
%t A376640 Quotient[CatalanNumber[n + 1] bellN2 + CatalanNumber[m] (2 sum - bellN2 - 2 BellB[m + 1]), 2]];
%t A376640 Table[A376640[n], {n, 0, 19}]  (* after _Chai Wah Wu_, _Peter Luschny_, Sep 03 2025 *)
%o A376640 (Python)
%o A376640 from functools import lru_cache
%o A376640 from sympy.functions.combinatorial.numbers import stirling, bell, catalan
%o A376640 def A376640(n):
%o A376640     if n&1:
%o A376640         return catalan(n+1)*bell(n+2)>>1
%o A376640     else:
%o A376640         if not n: return 2
%o A376640         @lru_cache(maxsize=None)
%o A376640         def ach(n,k): return (n==k) if n<2 else k*ach(n-2,k)+ach(n-2,k-1)+ach(n-2,k-2)
%o A376640         return (catalan(n+1)*bell(n+2)+catalan(m:=n>>1)*((sum(stirling(n+2,k,kind=2)+ach(n+2,k)>>1 for k in range(n+3))<<1)-bell(n+2)-(bell(m+1)<<1))>>1) # _Chai Wah Wu_, Oct 15 2024
%Y A376640 Slightly smaller than A376620(n).
%Y A376640 Cf. A289679.
%K A376640 nonn,changed
%O A376640 0,1
%A A376640 _Terence Tao_, Sep 30 2024
%E A376640 a(7) and beyond from _Michael S. Branicky_, Sep 30 2024
