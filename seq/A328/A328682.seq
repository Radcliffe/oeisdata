%I A328682 #38 Jun 02 2025 17:24:00
%S A328682 1,1,1,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,0,1,1,2,1,
%T A328682 0,0,1,0,1,0,3,0,1,0,0,1,0,1,1,4,6,6,1,0,0,1,0,1,0,6,0,19,0,1,0,0,1,0,
%U A328682 1,1,7,15,49,50,20,1,0,0,1,0,1,0,9,0,120,0,204,0,1,0,0,1,0,1,1,11,36,263,933,1689,832,91,1,0,0,1,0,1,0,13,0,571,0,13303,0,4330,0,1,0,0,1,0,1,1,15,72,1149,12465,90614,252207,187392,25227,509,1,0,0
%N A328682 Array read by antidiagonals: T(n,r) is the number of connected r-regular loopless multigraphs on n unlabeled nodes.
%C A328682 Initial terms computed using 'Nauty and Traces' (see the link).
%C A328682 T(0,r) = 1 because the "nodeless" graph has zero (therefore in this case all) nodes of degree r (for any r).
%C A328682 T(1,0) = 1 because only the empty graph on one node is 0-regular on 1 node.
%C A328682 T(1,r) = 0, for r>0: there's only one node and loops aren't allowed.
%C A328682 T(2,r) = 1, for r>0 since the only edges that are allowed are between the only two nodes.
%C A328682 T(3,r) = parity of r, for r>0. There are no such graphs of odd degree and for an even degree the only multigraph satisfying that condition is the regular triangular multigraph.
%C A328682 T(n,0) = 0, for n>1 because graphs having more than a node of degree zero are disconnected.
%C A328682 T(n,1) = 0, for n>2 since any connected graph with more than two nodes must have a node of degree greater than two.
%C A328682 T(n,2) = 1, for n>1: the only graphs satisfying that condition are the cyclic graphs of order n.
%C A328682 This sequence may be derived from A333330 by inverse Euler transform. - _Andrew Howroyd_, Mar 15 2020
%H A328682 Andrew Howroyd, <a href="/A328682/b328682.txt">Table of n, a(n) for n = 0..350</a>
%H A328682 Brendan McKay and Adolfo Piperno, <a href="http://pallini.di.uniroma1.it">Nauty and Traces</a>
%F A328682 Column r is the inverse Euler transform of column r of A333330. - _Andrew Howroyd_, Mar 15 2020
%e A328682 Square matrix T(n,r) begins:
%e A328682 ========================================================
%e A328682 n\r | 0     1     2     3     4     5      6      7
%e A328682 ----+---------------------------------------------------
%e A328682   0 | 1,    1,    1,    1,    1,    1,     1,     1, ...
%e A328682   1 | 1,    0,    0,    0,    0,    0,     0,     0, ...
%e A328682   2 | 0,    1,    1,    1,    1,    1,     1,     1, ...
%e A328682   3 | 0,    0,    1,    0,    1,    0,     1,     0, ...
%e A328682   4 | 0,    0,    1,    2,    3,    4,     6,     7, ...
%e A328682   5 | 0,    0,    1,    0,    6,    0,    15,     0, ...
%e A328682   6 | 0,    0,    1,    6,   19,   49,   120,   263, ...
%e A328682   7 | 0,    0,    1,    0,   50,    0,   933,     0, ...
%e A328682   8 | 0,    0,    1,   20,  204, 1689, 13303, 90614, ...
%e A328682   ...
%o A328682 (nauty)
%o A328682 # This program will execute the "else echo" line if the graph is nontrivial (first three columns, first two rows or both row and column indices are odd)
%o A328682 for ((i=0; i<16; i++)); do
%o A328682 n=0
%o A328682 r=${i}
%o A328682 while ((n<=i)); do
%o A328682 if( (((r==0)) && ((n==0)) ) || ( ((r==0)) && ((n==1)) ) || ( ((r==1)) && ((n==2)) ) || ( ((r==2)) && !((n==1)) ) ); then
%o A328682 echo 1
%o A328682 elif( ((n==0)) || ((n==1)) || ((r==0)) || ((r==1)) || (! ((${r}%2 == 0)) && ! ((${n}%2 == 0)) || ( ((r==2)) && ((n==1)) )) ); then
%o A328682 echo 0
%o A328682 else echo $(./geng -c -d1 ${n} -q | ./multig -m${r} -r${r} -u 2>&1 | cut -d ' ' -f 7 | grep -v '^$');  fi;
%o A328682 ((n++))
%o A328682 ((r--))
%o A328682 done
%o A328682 done
%Y A328682 Rows n=3..9 are: A000035, A253186, A324221, A324218, A324217, A325474, A327604.
%Y A328682 Columns r=3..8 are: A000421, A129417, A129419, A129421, A129423, A129425.
%Y A328682 Cf. A289986 (main diagonal), A333330 (not necessarily connected), A333397.
%K A328682 nonn,tabl,hard,changed
%O A328682 0,33
%A A328682 _Natan Arie Consigli_, Dec 17 2019
